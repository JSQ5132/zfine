<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ykxj.zfine.dao.mysql.CursorSaleMapper">
  <resultMap id="BaseResultMap" type="com.ykxj.zfine.model.CursorSale">
    <id column="t_id" jdbcType="INTEGER" property="tId" />
    <result column="F_Account" jdbcType="VARCHAR" property="fAccount" />
    <result column="Barcode" jdbcType="VARCHAR" property="barcode" />
    <result column="Name" jdbcType="VARCHAR" property="name" />
    <result column="Amount" jdbcType="DOUBLE" property="amount" />
    <result column="Sum_cost" jdbcType="DOUBLE" property="sumCost" />
    <result column="Code" jdbcType="VARCHAR" property="code" />
    <result column="Unit" jdbcType="VARCHAR" property="unit" />
    <result column="Statue" jdbcType="VARCHAR" property="statue" />
    <result column="Sum_price" jdbcType="DOUBLE" property="sumPrice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    t_id, F_Account, Barcode, Name, Amount, Sum_cost, Code, Unit, Statue, Sum_price
  </sql>
  <select id="selectByExample" parameterType="com.ykxj.zfine.model.CursorSaleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cursor_sale
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cursor_sale
    where t_id = #{tId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cursor_sale
    where t_id = #{tId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ykxj.zfine.model.CursorSaleExample">
    delete from cursor_sale
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ykxj.zfine.model.CursorSale">
    insert into cursor_sale (t_id, F_Account, Barcode, 
      Name, Amount, Sum_cost, 
      Code, Unit, Statue, 
      Sum_price)
    values (#{tId,jdbcType=INTEGER}, #{fAccount,jdbcType=VARCHAR}, #{barcode,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{amount,jdbcType=DOUBLE}, #{sumCost,jdbcType=DOUBLE}, 
      #{code,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, #{statue,jdbcType=VARCHAR}, 
      #{sumPrice,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.ykxj.zfine.model.CursorSale">
    insert into cursor_sale
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tId != null">
        t_id,
      </if>
      <if test="fAccount != null">
        F_Account,
      </if>
      <if test="barcode != null">
        Barcode,
      </if>
      <if test="name != null">
        Name,
      </if>
      <if test="amount != null">
        Amount,
      </if>
      <if test="sumCost != null">
        Sum_cost,
      </if>
      <if test="code != null">
        Code,
      </if>
      <if test="unit != null">
        Unit,
      </if>
      <if test="statue != null">
        Statue,
      </if>
      <if test="sumPrice != null">
        Sum_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tId != null">
        #{tId,jdbcType=INTEGER},
      </if>
      <if test="fAccount != null">
        #{fAccount,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="sumCost != null">
        #{sumCost,jdbcType=DOUBLE},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="statue != null">
        #{statue,jdbcType=VARCHAR},
      </if>
      <if test="sumPrice != null">
        #{sumPrice,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ykxj.zfine.model.CursorSaleExample" resultType="java.lang.Integer">
    select count(*) from cursor_sale
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cursor_sale
    <set>
      <if test="record.tId != null">
        t_id = #{record.tId,jdbcType=INTEGER},
      </if>
      <if test="record.fAccount != null">
        F_Account = #{record.fAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.barcode != null">
        Barcode = #{record.barcode,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        Name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        Amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.sumCost != null">
        Sum_cost = #{record.sumCost,jdbcType=DOUBLE},
      </if>
      <if test="record.code != null">
        Code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        Unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.statue != null">
        Statue = #{record.statue,jdbcType=VARCHAR},
      </if>
      <if test="record.sumPrice != null">
        Sum_price = #{record.sumPrice,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cursor_sale
    set t_id = #{record.tId,jdbcType=INTEGER},
      F_Account = #{record.fAccount,jdbcType=VARCHAR},
      Barcode = #{record.barcode,jdbcType=VARCHAR},
      Name = #{record.name,jdbcType=VARCHAR},
      Amount = #{record.amount,jdbcType=DOUBLE},
      Sum_cost = #{record.sumCost,jdbcType=DOUBLE},
      Code = #{record.code,jdbcType=VARCHAR},
      Unit = #{record.unit,jdbcType=VARCHAR},
      Statue = #{record.statue,jdbcType=VARCHAR},
      Sum_price = #{record.sumPrice,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ykxj.zfine.model.CursorSale">
    update cursor_sale
    <set>
      <if test="fAccount != null">
        F_Account = #{fAccount,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        Barcode = #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        Amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="sumCost != null">
        Sum_cost = #{sumCost,jdbcType=DOUBLE},
      </if>
      <if test="code != null">
        Code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        Unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="statue != null">
        Statue = #{statue,jdbcType=VARCHAR},
      </if>
      <if test="sumPrice != null">
        Sum_price = #{sumPrice,jdbcType=DOUBLE},
      </if>
    </set>
    where t_id = #{tId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ykxj.zfine.model.CursorSale">
    update cursor_sale
    set F_Account = #{fAccount,jdbcType=VARCHAR},
      Barcode = #{barcode,jdbcType=VARCHAR},
      Name = #{name,jdbcType=VARCHAR},
      Amount = #{amount,jdbcType=DOUBLE},
      Sum_cost = #{sumCost,jdbcType=DOUBLE},
      Code = #{code,jdbcType=VARCHAR},
      Unit = #{unit,jdbcType=VARCHAR},
      Statue = #{statue,jdbcType=VARCHAR},
      Sum_price = #{sumPrice,jdbcType=DOUBLE}
    where t_id = #{tId,jdbcType=INTEGER}
  </update>
</mapper>
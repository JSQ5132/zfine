<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ykxj.zfine.dao.mysql.SkuMapper">
  <resultMap id="BaseResultMap" type="com.ykxj.zfine.model.Sku">
    <id column="t_id" jdbcType="INTEGER" property="tId" />
    <result column="Appid" jdbcType="VARCHAR" property="appid" />
    <result column="Code" jdbcType="VARCHAR" property="code" />
    <result column="Barcode" jdbcType="VARCHAR" property="barcode" />
    <result column="Name" jdbcType="VARCHAR" property="name" />
    <result column="Spec" jdbcType="VARCHAR" property="spec" />
    <result column="Unit" jdbcType="VARCHAR" property="unit" />
    <result column="ifstock" jdbcType="INTEGER" property="ifstock" />
    <result column="Conversion" jdbcType="DECIMAL" property="conversion" />
    <result column="Provider" jdbcType="VARCHAR" property="provider" />
    <result column="Costprice" jdbcType="DECIMAL" property="costprice" />
    <result column="Price" jdbcType="DECIMAL" property="price" />
    <result column="Memprice" jdbcType="DECIMAL" property="memprice" />
    <result column="BatchPrice" jdbcType="DECIMAL" property="batchprice" />
    <result column="Tax" jdbcType="INTEGER" property="tax" />
    <result column="Nature" jdbcType="VARCHAR" property="nature" />
    <result column="keepday" jdbcType="INTEGER" property="keepday" />
    <result column="Statu" jdbcType="VARCHAR" property="statu" />
    <result column="Curversion" jdbcType="INTEGER" property="curversion" />
    <result column="Moditime" jdbcType="TIMESTAMP" property="moditime" />
    <result column="Sort" jdbcType="VARCHAR" property="sort" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    t_id, Appid, Code, Barcode, Name, Spec, Unit, ifstock, Conversion, Provider, Costprice, 
    Price, Memprice, BatchPrice, Tax, Nature, keepday, Statu, Curversion, Moditime, Sort
  </sql>
  <select id="selectByExample" parameterType="com.ykxj.zfine.model.SkuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sku
    where t_id = #{tId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sku
    where t_id = #{tId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ykxj.zfine.model.SkuExample">
    delete from sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ykxj.zfine.model.Sku">
    insert into sku (t_id, Appid, Code, 
      Barcode, Name, Spec, 
      Unit, ifstock, Conversion, 
      Provider, Costprice, Price, 
      Memprice, BatchPrice, Tax, 
      Nature, keepday, Statu, 
      Curversion, Moditime, Sort
      )
    values (#{tId,jdbcType=INTEGER}, #{appid,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{barcode,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{spec,jdbcType=VARCHAR}, 
      #{unit,jdbcType=VARCHAR}, #{ifstock,jdbcType=INTEGER}, #{conversion,jdbcType=DECIMAL}, 
      #{provider,jdbcType=VARCHAR}, #{costprice,jdbcType=DECIMAL}, #{price,jdbcType=DECIMAL}, 
      #{memprice,jdbcType=DECIMAL}, #{batchprice,jdbcType=DECIMAL}, #{tax,jdbcType=INTEGER}, 
      #{nature,jdbcType=VARCHAR}, #{keepday,jdbcType=INTEGER}, #{statu,jdbcType=VARCHAR}, 
      #{curversion,jdbcType=INTEGER}, #{moditime,jdbcType=TIMESTAMP}, #{sort,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ykxj.zfine.model.Sku">
    insert into sku
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tId != null">
        t_id,
      </if>
      <if test="appid != null">
        Appid,
      </if>
      <if test="code != null">
        Code,
      </if>
      <if test="barcode != null">
        Barcode,
      </if>
      <if test="name != null">
        Name,
      </if>
      <if test="spec != null">
        Spec,
      </if>
      <if test="unit != null">
        Unit,
      </if>
      <if test="ifstock != null">
        ifstock,
      </if>
      <if test="conversion != null">
        Conversion,
      </if>
      <if test="provider != null">
        Provider,
      </if>
      <if test="costprice != null">
        Costprice,
      </if>
      <if test="price != null">
        Price,
      </if>
      <if test="memprice != null">
        Memprice,
      </if>
      <if test="batchprice != null">
        BatchPrice,
      </if>
      <if test="tax != null">
        Tax,
      </if>
      <if test="nature != null">
        Nature,
      </if>
      <if test="keepday != null">
        keepday,
      </if>
      <if test="statu != null">
        Statu,
      </if>
      <if test="curversion != null">
        Curversion,
      </if>
      <if test="moditime != null">
        Moditime,
      </if>
      <if test="sort != null">
        Sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tId != null">
        #{tId,jdbcType=INTEGER},
      </if>
      <if test="appid != null">
        #{appid,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="spec != null">
        #{spec,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="ifstock != null">
        #{ifstock,jdbcType=INTEGER},
      </if>
      <if test="conversion != null">
        #{conversion,jdbcType=DECIMAL},
      </if>
      <if test="provider != null">
        #{provider,jdbcType=VARCHAR},
      </if>
      <if test="costprice != null">
        #{costprice,jdbcType=DECIMAL},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="memprice != null">
        #{memprice,jdbcType=DECIMAL},
      </if>
      <if test="batchprice != null">
        #{batchprice,jdbcType=DECIMAL},
      </if>
      <if test="tax != null">
        #{tax,jdbcType=INTEGER},
      </if>
      <if test="nature != null">
        #{nature,jdbcType=VARCHAR},
      </if>
      <if test="keepday != null">
        #{keepday,jdbcType=INTEGER},
      </if>
      <if test="statu != null">
        #{statu,jdbcType=VARCHAR},
      </if>
      <if test="curversion != null">
        #{curversion,jdbcType=INTEGER},
      </if>
      <if test="moditime != null">
        #{moditime,jdbcType=TIMESTAMP},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ykxj.zfine.model.SkuExample" resultType="java.lang.Integer">
    select count(*) from sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sku
    <set>
      <if test="record.tId != null">
        t_id = #{record.tId,jdbcType=INTEGER},
      </if>
      <if test="record.appid != null">
        Appid = #{record.appid,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        Code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.barcode != null">
        Barcode = #{record.barcode,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        Name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.spec != null">
        Spec = #{record.spec,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        Unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.ifstock != null">
        ifstock = #{record.ifstock,jdbcType=INTEGER},
      </if>
      <if test="record.conversion != null">
        Conversion = #{record.conversion,jdbcType=DECIMAL},
      </if>
      <if test="record.provider != null">
        Provider = #{record.provider,jdbcType=VARCHAR},
      </if>
      <if test="record.costprice != null">
        Costprice = #{record.costprice,jdbcType=DECIMAL},
      </if>
      <if test="record.price != null">
        Price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.memprice != null">
        Memprice = #{record.memprice,jdbcType=DECIMAL},
      </if>
      <if test="record.batchprice != null">
        BatchPrice = #{record.batchprice,jdbcType=DECIMAL},
      </if>
      <if test="record.tax != null">
        Tax = #{record.tax,jdbcType=INTEGER},
      </if>
      <if test="record.nature != null">
        Nature = #{record.nature,jdbcType=VARCHAR},
      </if>
      <if test="record.keepday != null">
        keepday = #{record.keepday,jdbcType=INTEGER},
      </if>
      <if test="record.statu != null">
        Statu = #{record.statu,jdbcType=VARCHAR},
      </if>
      <if test="record.curversion != null">
        Curversion = #{record.curversion,jdbcType=INTEGER},
      </if>
      <if test="record.moditime != null">
        Moditime = #{record.moditime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sort != null">
        Sort = #{record.sort,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sku
    set t_id = #{record.tId,jdbcType=INTEGER},
      Appid = #{record.appid,jdbcType=VARCHAR},
      Code = #{record.code,jdbcType=VARCHAR},
      Barcode = #{record.barcode,jdbcType=VARCHAR},
      Name = #{record.name,jdbcType=VARCHAR},
      Spec = #{record.spec,jdbcType=VARCHAR},
      Unit = #{record.unit,jdbcType=VARCHAR},
      ifstock = #{record.ifstock,jdbcType=INTEGER},
      Conversion = #{record.conversion,jdbcType=DECIMAL},
      Provider = #{record.provider,jdbcType=VARCHAR},
      Costprice = #{record.costprice,jdbcType=DECIMAL},
      Price = #{record.price,jdbcType=DECIMAL},
      Memprice = #{record.memprice,jdbcType=DECIMAL},
      BatchPrice = #{record.batchprice,jdbcType=DECIMAL},
      Tax = #{record.tax,jdbcType=INTEGER},
      Nature = #{record.nature,jdbcType=VARCHAR},
      keepday = #{record.keepday,jdbcType=INTEGER},
      Statu = #{record.statu,jdbcType=VARCHAR},
      Curversion = #{record.curversion,jdbcType=INTEGER},
      Moditime = #{record.moditime,jdbcType=TIMESTAMP},
      Sort = #{record.sort,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ykxj.zfine.model.Sku">
    update sku
    <set>
      <if test="appid != null">
        Appid = #{appid,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        Code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        Barcode = #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="spec != null">
        Spec = #{spec,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        Unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="ifstock != null">
        ifstock = #{ifstock,jdbcType=INTEGER},
      </if>
      <if test="conversion != null">
        Conversion = #{conversion,jdbcType=DECIMAL},
      </if>
      <if test="provider != null">
        Provider = #{provider,jdbcType=VARCHAR},
      </if>
      <if test="costprice != null">
        Costprice = #{costprice,jdbcType=DECIMAL},
      </if>
      <if test="price != null">
        Price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="memprice != null">
        Memprice = #{memprice,jdbcType=DECIMAL},
      </if>
      <if test="batchprice != null">
        BatchPrice = #{batchprice,jdbcType=DECIMAL},
      </if>
      <if test="tax != null">
        Tax = #{tax,jdbcType=INTEGER},
      </if>
      <if test="nature != null">
        Nature = #{nature,jdbcType=VARCHAR},
      </if>
      <if test="keepday != null">
        keepday = #{keepday,jdbcType=INTEGER},
      </if>
      <if test="statu != null">
        Statu = #{statu,jdbcType=VARCHAR},
      </if>
      <if test="curversion != null">
        Curversion = #{curversion,jdbcType=INTEGER},
      </if>
      <if test="moditime != null">
        Moditime = #{moditime,jdbcType=TIMESTAMP},
      </if>
      <if test="sort != null">
        Sort = #{sort,jdbcType=VARCHAR},
      </if>
    </set>
    where t_id = #{tId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ykxj.zfine.model.Sku">
    update sku
    set Appid = #{appid,jdbcType=VARCHAR},
      Code = #{code,jdbcType=VARCHAR},
      Barcode = #{barcode,jdbcType=VARCHAR},
      Name = #{name,jdbcType=VARCHAR},
      Spec = #{spec,jdbcType=VARCHAR},
      Unit = #{unit,jdbcType=VARCHAR},
      ifstock = #{ifstock,jdbcType=INTEGER},
      Conversion = #{conversion,jdbcType=DECIMAL},
      Provider = #{provider,jdbcType=VARCHAR},
      Costprice = #{costprice,jdbcType=DECIMAL},
      Price = #{price,jdbcType=DECIMAL},
      Memprice = #{memprice,jdbcType=DECIMAL},
      BatchPrice = #{batchprice,jdbcType=DECIMAL},
      Tax = #{tax,jdbcType=INTEGER},
      Nature = #{nature,jdbcType=VARCHAR},
      keepday = #{keepday,jdbcType=INTEGER},
      Statu = #{statu,jdbcType=VARCHAR},
      Curversion = #{curversion,jdbcType=INTEGER},
      Moditime = #{moditime,jdbcType=TIMESTAMP},
      Sort = #{sort,jdbcType=VARCHAR}
    where t_id = #{tId,jdbcType=INTEGER}
  </update>
</mapper>
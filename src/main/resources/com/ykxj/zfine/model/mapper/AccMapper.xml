<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ykxj.zfine.dao.mysql.AccMapper">
  <resultMap id="BaseResultMap" type="com.ykxj.zfine.model.Acc">
    <id column="Nd" jdbcType="INTEGER" property="nd" />
    <result column="Appid" jdbcType="VARCHAR" property="appid" />
    <result column="Busdate" jdbcType="TIMESTAMP" property="busdate" />
    <result column="Organ" jdbcType="VARCHAR" property="organ" />
    <result column="Sort" jdbcType="VARCHAR" property="sort" />
    <result column="Provider" jdbcType="VARCHAR" property="provider" />
    <result column="Code" jdbcType="VARCHAR" property="code" />
    <result column="Barcode" jdbcType="VARCHAR" property="barcode" />
    <result column="Resume" jdbcType="VARCHAR" property="resume" />
    <result column="Acceptid" jdbcType="VARCHAR" property="acceptid" />
    <result column="Amount" jdbcType="DECIMAL" property="amount" />
    <result column="Sum_cost" jdbcType="DECIMAL" property="sumCost" />
    <result column="Sum_price" jdbcType="DECIMAL" property="sumPrice" />
    <result column="State" jdbcType="INTEGER" property="state" />
    <result column="Tax" jdbcType="INTEGER" property="tax" />
    <result column="Sum_wscost" jdbcType="DECIMAL" property="sumWscost" />
    <result column="Nature" jdbcType="INTEGER" property="nature" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Nd, Appid, Busdate, Organ, Sort, Provider, Code, Barcode, Resume, Acceptid, Amount, 
    Sum_cost, Sum_price, State, Tax, Sum_wscost, Nature
  </sql>
  <select id="selectByExample" parameterType="com.ykxj.zfine.model.AccExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from acc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from acc
    where Nd = #{nd,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from acc
    where Nd = #{nd,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ykxj.zfine.model.AccExample">
    delete from acc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ykxj.zfine.model.Acc">
    insert into acc (Nd, Appid, Busdate, 
      Organ, Sort, Provider, 
      Code, Barcode, Resume, 
      Acceptid, Amount, Sum_cost, 
      Sum_price, State, Tax, 
      Sum_wscost, Nature)
    values (#{nd,jdbcType=INTEGER}, #{appid,jdbcType=VARCHAR}, #{busdate,jdbcType=TIMESTAMP}, 
      #{organ,jdbcType=VARCHAR}, #{sort,jdbcType=VARCHAR}, #{provider,jdbcType=VARCHAR}, 
      #{code,jdbcType=VARCHAR}, #{barcode,jdbcType=VARCHAR}, #{resume,jdbcType=VARCHAR}, 
      #{acceptid,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, #{sumCost,jdbcType=DECIMAL}, 
      #{sumPrice,jdbcType=DECIMAL}, #{state,jdbcType=INTEGER}, #{tax,jdbcType=INTEGER}, 
      #{sumWscost,jdbcType=DECIMAL}, #{nature,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ykxj.zfine.model.Acc">
    insert into acc
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nd != null">
        Nd,
      </if>
      <if test="appid != null">
        Appid,
      </if>
      <if test="busdate != null">
        Busdate,
      </if>
      <if test="organ != null">
        Organ,
      </if>
      <if test="sort != null">
        Sort,
      </if>
      <if test="provider != null">
        Provider,
      </if>
      <if test="code != null">
        Code,
      </if>
      <if test="barcode != null">
        Barcode,
      </if>
      <if test="resume != null">
        Resume,
      </if>
      <if test="acceptid != null">
        Acceptid,
      </if>
      <if test="amount != null">
        Amount,
      </if>
      <if test="sumCost != null">
        Sum_cost,
      </if>
      <if test="sumPrice != null">
        Sum_price,
      </if>
      <if test="state != null">
        State,
      </if>
      <if test="tax != null">
        Tax,
      </if>
      <if test="sumWscost != null">
        Sum_wscost,
      </if>
      <if test="nature != null">
        Nature,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nd != null">
        #{nd,jdbcType=INTEGER},
      </if>
      <if test="appid != null">
        #{appid,jdbcType=VARCHAR},
      </if>
      <if test="busdate != null">
        #{busdate,jdbcType=TIMESTAMP},
      </if>
      <if test="organ != null">
        #{organ,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=VARCHAR},
      </if>
      <if test="provider != null">
        #{provider,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="resume != null">
        #{resume,jdbcType=VARCHAR},
      </if>
      <if test="acceptid != null">
        #{acceptid,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="sumCost != null">
        #{sumCost,jdbcType=DECIMAL},
      </if>
      <if test="sumPrice != null">
        #{sumPrice,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="tax != null">
        #{tax,jdbcType=INTEGER},
      </if>
      <if test="sumWscost != null">
        #{sumWscost,jdbcType=DECIMAL},
      </if>
      <if test="nature != null">
        #{nature,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ykxj.zfine.model.AccExample" resultType="java.lang.Integer">
    select count(*) from acc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update acc
    <set>
      <if test="record.nd != null">
        Nd = #{record.nd,jdbcType=INTEGER},
      </if>
      <if test="record.appid != null">
        Appid = #{record.appid,jdbcType=VARCHAR},
      </if>
      <if test="record.busdate != null">
        Busdate = #{record.busdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.organ != null">
        Organ = #{record.organ,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        Sort = #{record.sort,jdbcType=VARCHAR},
      </if>
      <if test="record.provider != null">
        Provider = #{record.provider,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        Code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.barcode != null">
        Barcode = #{record.barcode,jdbcType=VARCHAR},
      </if>
      <if test="record.resume != null">
        Resume = #{record.resume,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptid != null">
        Acceptid = #{record.acceptid,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        Amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.sumCost != null">
        Sum_cost = #{record.sumCost,jdbcType=DECIMAL},
      </if>
      <if test="record.sumPrice != null">
        Sum_price = #{record.sumPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.state != null">
        State = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.tax != null">
        Tax = #{record.tax,jdbcType=INTEGER},
      </if>
      <if test="record.sumWscost != null">
        Sum_wscost = #{record.sumWscost,jdbcType=DECIMAL},
      </if>
      <if test="record.nature != null">
        Nature = #{record.nature,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update acc
    set Nd = #{record.nd,jdbcType=INTEGER},
      Appid = #{record.appid,jdbcType=VARCHAR},
      Busdate = #{record.busdate,jdbcType=TIMESTAMP},
      Organ = #{record.organ,jdbcType=VARCHAR},
      Sort = #{record.sort,jdbcType=VARCHAR},
      Provider = #{record.provider,jdbcType=VARCHAR},
      Code = #{record.code,jdbcType=VARCHAR},
      Barcode = #{record.barcode,jdbcType=VARCHAR},
      Resume = #{record.resume,jdbcType=VARCHAR},
      Acceptid = #{record.acceptid,jdbcType=VARCHAR},
      Amount = #{record.amount,jdbcType=DECIMAL},
      Sum_cost = #{record.sumCost,jdbcType=DECIMAL},
      Sum_price = #{record.sumPrice,jdbcType=DECIMAL},
      State = #{record.state,jdbcType=INTEGER},
      Tax = #{record.tax,jdbcType=INTEGER},
      Sum_wscost = #{record.sumWscost,jdbcType=DECIMAL},
      Nature = #{record.nature,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ykxj.zfine.model.Acc">
    update acc
    <set>
      <if test="appid != null">
        Appid = #{appid,jdbcType=VARCHAR},
      </if>
      <if test="busdate != null">
        Busdate = #{busdate,jdbcType=TIMESTAMP},
      </if>
      <if test="organ != null">
        Organ = #{organ,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        Sort = #{sort,jdbcType=VARCHAR},
      </if>
      <if test="provider != null">
        Provider = #{provider,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        Code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        Barcode = #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="resume != null">
        Resume = #{resume,jdbcType=VARCHAR},
      </if>
      <if test="acceptid != null">
        Acceptid = #{acceptid,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        Amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="sumCost != null">
        Sum_cost = #{sumCost,jdbcType=DECIMAL},
      </if>
      <if test="sumPrice != null">
        Sum_price = #{sumPrice,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        State = #{state,jdbcType=INTEGER},
      </if>
      <if test="tax != null">
        Tax = #{tax,jdbcType=INTEGER},
      </if>
      <if test="sumWscost != null">
        Sum_wscost = #{sumWscost,jdbcType=DECIMAL},
      </if>
      <if test="nature != null">
        Nature = #{nature,jdbcType=INTEGER},
      </if>
    </set>
    where Nd = #{nd,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ykxj.zfine.model.Acc">
    update acc
    set Appid = #{appid,jdbcType=VARCHAR},
      Busdate = #{busdate,jdbcType=TIMESTAMP},
      Organ = #{organ,jdbcType=VARCHAR},
      Sort = #{sort,jdbcType=VARCHAR},
      Provider = #{provider,jdbcType=VARCHAR},
      Code = #{code,jdbcType=VARCHAR},
      Barcode = #{barcode,jdbcType=VARCHAR},
      Resume = #{resume,jdbcType=VARCHAR},
      Acceptid = #{acceptid,jdbcType=VARCHAR},
      Amount = #{amount,jdbcType=DECIMAL},
      Sum_cost = #{sumCost,jdbcType=DECIMAL},
      Sum_price = #{sumPrice,jdbcType=DECIMAL},
      State = #{state,jdbcType=INTEGER},
      Tax = #{tax,jdbcType=INTEGER},
      Sum_wscost = #{sumWscost,jdbcType=DECIMAL},
      Nature = #{nature,jdbcType=INTEGER}
    where Nd = #{nd,jdbcType=INTEGER}
  </update>
</mapper>
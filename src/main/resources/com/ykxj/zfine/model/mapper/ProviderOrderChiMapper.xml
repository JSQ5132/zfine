<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ykxj.zfine.dao.mysql.ProviderOrderChiMapper">
  <resultMap id="BaseResultMap" type="com.ykxj.zfine.model.ProviderOrderChi">
    <id column="Nd" jdbcType="INTEGER" property="nd" />
    <result column="F_Id" jdbcType="VARCHAR" property="fId" />
    <result column="Code" jdbcType="VARCHAR" property="code" />
    <result column="Barcode" jdbcType="VARCHAR" property="barcode" />
    <result column="Name" jdbcType="VARCHAR" property="name" />
    <result column="Spec" jdbcType="VARCHAR" property="spec" />
    <result column="Unit" jdbcType="VARCHAR" property="unit" />
    <result column="Amount" jdbcType="DECIMAL" property="amount" />
    <result column="Costprice" jdbcType="DECIMAL" property="costprice" />
    <result column="Price" jdbcType="DECIMAL" property="price" />
    <result column="ConfirmAmount" jdbcType="DECIMAL" property="confirmamount" />
    <result column="StockAmount" jdbcType="DECIMAL" property="stockamount" />
    <result column="DailySaleAmount" jdbcType="DECIMAL" property="dailysaleamount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Nd, F_Id, Code, Barcode, Name, Spec, Unit, Amount, Costprice, Price, ConfirmAmount, 
    StockAmount, DailySaleAmount
  </sql>
  <select id="selectByExample" parameterType="com.ykxj.zfine.model.ProviderOrderChiExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from provider_order_chi
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from provider_order_chi
    where Nd = #{nd,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from provider_order_chi
    where Nd = #{nd,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ykxj.zfine.model.ProviderOrderChiExample">
    delete from provider_order_chi
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ykxj.zfine.model.ProviderOrderChi">
    insert into provider_order_chi (Nd, F_Id, Code, 
      Barcode, Name, Spec, 
      Unit, Amount, Costprice, 
      Price, ConfirmAmount, StockAmount, 
      DailySaleAmount)
    values (#{nd,jdbcType=INTEGER}, #{fId,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{barcode,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{spec,jdbcType=VARCHAR}, 
      #{unit,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, #{costprice,jdbcType=DECIMAL}, 
      #{price,jdbcType=DECIMAL}, #{confirmamount,jdbcType=DECIMAL}, #{stockamount,jdbcType=DECIMAL}, 
      #{dailysaleamount,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.ykxj.zfine.model.ProviderOrderChi">
    insert into provider_order_chi
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nd != null">
        Nd,
      </if>
      <if test="fId != null">
        F_Id,
      </if>
      <if test="code != null">
        Code,
      </if>
      <if test="barcode != null">
        Barcode,
      </if>
      <if test="name != null">
        Name,
      </if>
      <if test="spec != null">
        Spec,
      </if>
      <if test="unit != null">
        Unit,
      </if>
      <if test="amount != null">
        Amount,
      </if>
      <if test="costprice != null">
        Costprice,
      </if>
      <if test="price != null">
        Price,
      </if>
      <if test="confirmamount != null">
        ConfirmAmount,
      </if>
      <if test="stockamount != null">
        StockAmount,
      </if>
      <if test="dailysaleamount != null">
        DailySaleAmount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nd != null">
        #{nd,jdbcType=INTEGER},
      </if>
      <if test="fId != null">
        #{fId,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="spec != null">
        #{spec,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="costprice != null">
        #{costprice,jdbcType=DECIMAL},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="confirmamount != null">
        #{confirmamount,jdbcType=DECIMAL},
      </if>
      <if test="stockamount != null">
        #{stockamount,jdbcType=DECIMAL},
      </if>
      <if test="dailysaleamount != null">
        #{dailysaleamount,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ykxj.zfine.model.ProviderOrderChiExample" resultType="java.lang.Integer">
    select count(*) from provider_order_chi
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update provider_order_chi
    <set>
      <if test="record.nd != null">
        Nd = #{record.nd,jdbcType=INTEGER},
      </if>
      <if test="record.fId != null">
        F_Id = #{record.fId,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        Code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.barcode != null">
        Barcode = #{record.barcode,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        Name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.spec != null">
        Spec = #{record.spec,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        Unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        Amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.costprice != null">
        Costprice = #{record.costprice,jdbcType=DECIMAL},
      </if>
      <if test="record.price != null">
        Price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.confirmamount != null">
        ConfirmAmount = #{record.confirmamount,jdbcType=DECIMAL},
      </if>
      <if test="record.stockamount != null">
        StockAmount = #{record.stockamount,jdbcType=DECIMAL},
      </if>
      <if test="record.dailysaleamount != null">
        DailySaleAmount = #{record.dailysaleamount,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update provider_order_chi
    set Nd = #{record.nd,jdbcType=INTEGER},
      F_Id = #{record.fId,jdbcType=VARCHAR},
      Code = #{record.code,jdbcType=VARCHAR},
      Barcode = #{record.barcode,jdbcType=VARCHAR},
      Name = #{record.name,jdbcType=VARCHAR},
      Spec = #{record.spec,jdbcType=VARCHAR},
      Unit = #{record.unit,jdbcType=VARCHAR},
      Amount = #{record.amount,jdbcType=DECIMAL},
      Costprice = #{record.costprice,jdbcType=DECIMAL},
      Price = #{record.price,jdbcType=DECIMAL},
      ConfirmAmount = #{record.confirmamount,jdbcType=DECIMAL},
      StockAmount = #{record.stockamount,jdbcType=DECIMAL},
      DailySaleAmount = #{record.dailysaleamount,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ykxj.zfine.model.ProviderOrderChi">
    update provider_order_chi
    <set>
      <if test="fId != null">
        F_Id = #{fId,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        Code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        Barcode = #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="spec != null">
        Spec = #{spec,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        Unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        Amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="costprice != null">
        Costprice = #{costprice,jdbcType=DECIMAL},
      </if>
      <if test="price != null">
        Price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="confirmamount != null">
        ConfirmAmount = #{confirmamount,jdbcType=DECIMAL},
      </if>
      <if test="stockamount != null">
        StockAmount = #{stockamount,jdbcType=DECIMAL},
      </if>
      <if test="dailysaleamount != null">
        DailySaleAmount = #{dailysaleamount,jdbcType=DECIMAL},
      </if>
    </set>
    where Nd = #{nd,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ykxj.zfine.model.ProviderOrderChi">
    update provider_order_chi
    set F_Id = #{fId,jdbcType=VARCHAR},
      Code = #{code,jdbcType=VARCHAR},
      Barcode = #{barcode,jdbcType=VARCHAR},
      Name = #{name,jdbcType=VARCHAR},
      Spec = #{spec,jdbcType=VARCHAR},
      Unit = #{unit,jdbcType=VARCHAR},
      Amount = #{amount,jdbcType=DECIMAL},
      Costprice = #{costprice,jdbcType=DECIMAL},
      Price = #{price,jdbcType=DECIMAL},
      ConfirmAmount = #{confirmamount,jdbcType=DECIMAL},
      StockAmount = #{stockamount,jdbcType=DECIMAL},
      DailySaleAmount = #{dailysaleamount,jdbcType=DECIMAL}
    where Nd = #{nd,jdbcType=INTEGER}
  </update>
</mapper>
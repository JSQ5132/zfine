<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ykxj.zfine.dao.mysql.CostadjustChiMapper">
  <resultMap id="BaseResultMap" type="com.ykxj.zfine.model.CostadjustChi">
    <id column="nd" jdbcType="INTEGER" property="nd" />
    <result column="appid" jdbcType="VARCHAR" property="appid" />
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="barcode" jdbcType="VARCHAR" property="barcode" />
    <result column="acceptid" jdbcType="VARCHAR" property="acceptid" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="costprice" jdbcType="DECIMAL" property="costprice" />
    <result column="costprice_new" jdbcType="DECIMAL" property="costpriceNew" />
    <result column="costadjust" jdbcType="DECIMAL" property="costadjust" />
    <result column="sum_cost" jdbcType="DECIMAL" property="sumCost" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="notaxcost" jdbcType="DECIMAL" property="notaxcost" />
    <result column="tax" jdbcType="INTEGER" property="tax" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    nd, appid, id, code, barcode, acceptid, amount, costprice, costprice_new, costadjust, 
    sum_cost, price, notaxcost, tax
  </sql>
  <select id="selectByExample" parameterType="com.ykxj.zfine.model.CostadjustChiExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from costadjust_chi
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from costadjust_chi
    where nd = #{nd,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from costadjust_chi
    where nd = #{nd,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ykxj.zfine.model.CostadjustChiExample">
    delete from costadjust_chi
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ykxj.zfine.model.CostadjustChi">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into costadjust_chi (nd, appidcode, 
      barcode, acceptid, amount, 
      costprice, costprice_new, costadjust, 
      sum_cost, price, notaxcost, 
      tax)
    values (#{nd,jdbcType=INTEGER}, #{appid,jdbcType=VARCHAR}#{code,jdbcType=VARCHAR}, 
      #{barcode,jdbcType=VARCHAR}, #{acceptid,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, 
      #{costprice,jdbcType=DECIMAL}, #{costpriceNew,jdbcType=DECIMAL}, #{costadjust,jdbcType=DECIMAL}, 
      #{sumCost,jdbcType=DECIMAL}, #{price,jdbcType=DECIMAL}, #{notaxcost,jdbcType=DECIMAL}, 
      #{tax,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ykxj.zfine.model.CostadjustChi">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into costadjust_chi
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nd != null">
        nd,
      </if>
      <if test="appid != null">
        appid,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="barcode != null">
        barcode,
      </if>
      <if test="acceptid != null">
        acceptid,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="costprice != null">
        costprice,
      </if>
      <if test="costpriceNew != null">
        costprice_new,
      </if>
      <if test="costadjust != null">
        costadjust,
      </if>
      <if test="sumCost != null">
        sum_cost,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="notaxcost != null">
        notaxcost,
      </if>
      <if test="tax != null">
        tax,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nd != null">
        #{nd,jdbcType=INTEGER},
      </if>
      <if test="appid != null">
        #{appid,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="acceptid != null">
        #{acceptid,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="costprice != null">
        #{costprice,jdbcType=DECIMAL},
      </if>
      <if test="costpriceNew != null">
        #{costpriceNew,jdbcType=DECIMAL},
      </if>
      <if test="costadjust != null">
        #{costadjust,jdbcType=DECIMAL},
      </if>
      <if test="sumCost != null">
        #{sumCost,jdbcType=DECIMAL},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="notaxcost != null">
        #{notaxcost,jdbcType=DECIMAL},
      </if>
      <if test="tax != null">
        #{tax,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ykxj.zfine.model.CostadjustChiExample" resultType="java.lang.Integer">
    select count(*) from costadjust_chi
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update costadjust_chi
    <set>
      <if test="record.nd != null">
        nd = #{record.nd,jdbcType=INTEGER},
      </if>
      <if test="record.appid != null">
        appid = #{record.appid,jdbcType=VARCHAR},
      </if>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.barcode != null">
        barcode = #{record.barcode,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptid != null">
        acceptid = #{record.acceptid,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.costprice != null">
        costprice = #{record.costprice,jdbcType=DECIMAL},
      </if>
      <if test="record.costpriceNew != null">
        costprice_new = #{record.costpriceNew,jdbcType=DECIMAL},
      </if>
      <if test="record.costadjust != null">
        costadjust = #{record.costadjust,jdbcType=DECIMAL},
      </if>
      <if test="record.sumCost != null">
        sum_cost = #{record.sumCost,jdbcType=DECIMAL},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.notaxcost != null">
        notaxcost = #{record.notaxcost,jdbcType=DECIMAL},
      </if>
      <if test="record.tax != null">
        tax = #{record.tax,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update costadjust_chi
    set nd = #{record.nd,jdbcType=INTEGER},
      appid = #{record.appid,jdbcType=VARCHAR},
      id = #{record.id,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      barcode = #{record.barcode,jdbcType=VARCHAR},
      acceptid = #{record.acceptid,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      costprice = #{record.costprice,jdbcType=DECIMAL},
      costprice_new = #{record.costpriceNew,jdbcType=DECIMAL},
      costadjust = #{record.costadjust,jdbcType=DECIMAL},
      sum_cost = #{record.sumCost,jdbcType=DECIMAL},
      price = #{record.price,jdbcType=DECIMAL},
      notaxcost = #{record.notaxcost,jdbcType=DECIMAL},
      tax = #{record.tax,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ykxj.zfine.model.CostadjustChi">
    update costadjust_chi
    <set>
      <if test="appid != null">
        appid = #{appid,jdbcType=VARCHAR},
      </if>
      <if test="id != null">
        id = #{id,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        barcode = #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="acceptid != null">
        acceptid = #{acceptid,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="costprice != null">
        costprice = #{costprice,jdbcType=DECIMAL},
      </if>
      <if test="costpriceNew != null">
        costprice_new = #{costpriceNew,jdbcType=DECIMAL},
      </if>
      <if test="costadjust != null">
        costadjust = #{costadjust,jdbcType=DECIMAL},
      </if>
      <if test="sumCost != null">
        sum_cost = #{sumCost,jdbcType=DECIMAL},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="notaxcost != null">
        notaxcost = #{notaxcost,jdbcType=DECIMAL},
      </if>
      <if test="tax != null">
        tax = #{tax,jdbcType=INTEGER},
      </if>
    </set>
    where nd = #{nd,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ykxj.zfine.model.CostadjustChi">
    update costadjust_chi
    set appid = #{appid,jdbcType=VARCHAR},
      id = #{id,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      barcode = #{barcode,jdbcType=VARCHAR},
      acceptid = #{acceptid,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      costprice = #{costprice,jdbcType=DECIMAL},
      costprice_new = #{costpriceNew,jdbcType=DECIMAL},
      costadjust = #{costadjust,jdbcType=DECIMAL},
      sum_cost = #{sumCost,jdbcType=DECIMAL},
      price = #{price,jdbcType=DECIMAL},
      notaxcost = #{notaxcost,jdbcType=DECIMAL},
      tax = #{tax,jdbcType=INTEGER}
    where nd = #{nd,jdbcType=INTEGER}
  </update>
</mapper>
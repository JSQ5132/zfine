<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ykxj.zfine.dao.mysql.SysLogMapper">
  <resultMap id="BaseResultMap" type="com.ykxj.zfine.model.SysLog">
    <id column="F_Id" jdbcType="VARCHAR" property="fId" />
    <result column="F_Date" jdbcType="TIMESTAMP" property="fDate" />
    <result column="F_Account" jdbcType="VARCHAR" property="fAccount" />
    <result column="F_NickName" jdbcType="VARCHAR" property="fNickname" />
    <result column="F_Type" jdbcType="VARCHAR" property="fType" />
    <result column="F_IPAddress" jdbcType="VARCHAR" property="fIpaddress" />
    <result column="F_IPAddressName" jdbcType="VARCHAR" property="fIpaddressname" />
    <result column="F_ModuleId" jdbcType="VARCHAR" property="fModuleid" />
    <result column="F_ModuleName" jdbcType="VARCHAR" property="fModulename" />
    <result column="F_Result" jdbcType="BIT" property="fResult" />
    <result column="F_Description" jdbcType="VARCHAR" property="fDescription" />
    <result column="F_CreatorTime" jdbcType="TIMESTAMP" property="fCreatortime" />
    <result column="F_CreatorUserId" jdbcType="VARCHAR" property="fCreatoruserid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    F_Id, F_Date, F_Account, F_NickName, F_Type, F_IPAddress, F_IPAddressName, F_ModuleId, 
    F_ModuleName, F_Result, F_Description, F_CreatorTime, F_CreatorUserId
  </sql>
  <select id="selectByExample" parameterType="com.ykxj.zfine.model.SysLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_log
    where F_Id = #{fId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_log
    where F_Id = #{fId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ykxj.zfine.model.SysLogExample">
    delete from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ykxj.zfine.model.SysLog">
    insert into sys_log (F_Id, F_Date, F_Account, 
      F_NickName, F_Type, F_IPAddress, 
      F_IPAddressName, F_ModuleId, F_ModuleName, 
      F_Result, F_Description, F_CreatorTime, 
      F_CreatorUserId)
    values (#{fId,jdbcType=VARCHAR}, #{fDate,jdbcType=TIMESTAMP}, #{fAccount,jdbcType=VARCHAR}, 
      #{fNickname,jdbcType=VARCHAR}, #{fType,jdbcType=VARCHAR}, #{fIpaddress,jdbcType=VARCHAR}, 
      #{fIpaddressname,jdbcType=VARCHAR}, #{fModuleid,jdbcType=VARCHAR}, #{fModulename,jdbcType=VARCHAR}, 
      #{fResult,jdbcType=BIT}, #{fDescription,jdbcType=VARCHAR}, #{fCreatortime,jdbcType=TIMESTAMP}, 
      #{fCreatoruserid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ykxj.zfine.model.SysLog">
    insert into sys_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fId != null">
        F_Id,
      </if>
      <if test="fDate != null">
        F_Date,
      </if>
      <if test="fAccount != null">
        F_Account,
      </if>
      <if test="fNickname != null">
        F_NickName,
      </if>
      <if test="fType != null">
        F_Type,
      </if>
      <if test="fIpaddress != null">
        F_IPAddress,
      </if>
      <if test="fIpaddressname != null">
        F_IPAddressName,
      </if>
      <if test="fModuleid != null">
        F_ModuleId,
      </if>
      <if test="fModulename != null">
        F_ModuleName,
      </if>
      <if test="fResult != null">
        F_Result,
      </if>
      <if test="fDescription != null">
        F_Description,
      </if>
      <if test="fCreatortime != null">
        F_CreatorTime,
      </if>
      <if test="fCreatoruserid != null">
        F_CreatorUserId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fId != null">
        #{fId,jdbcType=VARCHAR},
      </if>
      <if test="fDate != null">
        #{fDate,jdbcType=TIMESTAMP},
      </if>
      <if test="fAccount != null">
        #{fAccount,jdbcType=VARCHAR},
      </if>
      <if test="fNickname != null">
        #{fNickname,jdbcType=VARCHAR},
      </if>
      <if test="fType != null">
        #{fType,jdbcType=VARCHAR},
      </if>
      <if test="fIpaddress != null">
        #{fIpaddress,jdbcType=VARCHAR},
      </if>
      <if test="fIpaddressname != null">
        #{fIpaddressname,jdbcType=VARCHAR},
      </if>
      <if test="fModuleid != null">
        #{fModuleid,jdbcType=VARCHAR},
      </if>
      <if test="fModulename != null">
        #{fModulename,jdbcType=VARCHAR},
      </if>
      <if test="fResult != null">
        #{fResult,jdbcType=BIT},
      </if>
      <if test="fDescription != null">
        #{fDescription,jdbcType=VARCHAR},
      </if>
      <if test="fCreatortime != null">
        #{fCreatortime,jdbcType=TIMESTAMP},
      </if>
      <if test="fCreatoruserid != null">
        #{fCreatoruserid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ykxj.zfine.model.SysLogExample" resultType="java.lang.Integer">
    select count(*) from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_log
    <set>
      <if test="record.fId != null">
        F_Id = #{record.fId,jdbcType=VARCHAR},
      </if>
      <if test="record.fDate != null">
        F_Date = #{record.fDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fAccount != null">
        F_Account = #{record.fAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.fNickname != null">
        F_NickName = #{record.fNickname,jdbcType=VARCHAR},
      </if>
      <if test="record.fType != null">
        F_Type = #{record.fType,jdbcType=VARCHAR},
      </if>
      <if test="record.fIpaddress != null">
        F_IPAddress = #{record.fIpaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.fIpaddressname != null">
        F_IPAddressName = #{record.fIpaddressname,jdbcType=VARCHAR},
      </if>
      <if test="record.fModuleid != null">
        F_ModuleId = #{record.fModuleid,jdbcType=VARCHAR},
      </if>
      <if test="record.fModulename != null">
        F_ModuleName = #{record.fModulename,jdbcType=VARCHAR},
      </if>
      <if test="record.fResult != null">
        F_Result = #{record.fResult,jdbcType=BIT},
      </if>
      <if test="record.fDescription != null">
        F_Description = #{record.fDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.fCreatortime != null">
        F_CreatorTime = #{record.fCreatortime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fCreatoruserid != null">
        F_CreatorUserId = #{record.fCreatoruserid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_log
    set F_Id = #{record.fId,jdbcType=VARCHAR},
      F_Date = #{record.fDate,jdbcType=TIMESTAMP},
      F_Account = #{record.fAccount,jdbcType=VARCHAR},
      F_NickName = #{record.fNickname,jdbcType=VARCHAR},
      F_Type = #{record.fType,jdbcType=VARCHAR},
      F_IPAddress = #{record.fIpaddress,jdbcType=VARCHAR},
      F_IPAddressName = #{record.fIpaddressname,jdbcType=VARCHAR},
      F_ModuleId = #{record.fModuleid,jdbcType=VARCHAR},
      F_ModuleName = #{record.fModulename,jdbcType=VARCHAR},
      F_Result = #{record.fResult,jdbcType=BIT},
      F_Description = #{record.fDescription,jdbcType=VARCHAR},
      F_CreatorTime = #{record.fCreatortime,jdbcType=TIMESTAMP},
      F_CreatorUserId = #{record.fCreatoruserid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ykxj.zfine.model.SysLog">
    update sys_log
    <set>
      <if test="fDate != null">
        F_Date = #{fDate,jdbcType=TIMESTAMP},
      </if>
      <if test="fAccount != null">
        F_Account = #{fAccount,jdbcType=VARCHAR},
      </if>
      <if test="fNickname != null">
        F_NickName = #{fNickname,jdbcType=VARCHAR},
      </if>
      <if test="fType != null">
        F_Type = #{fType,jdbcType=VARCHAR},
      </if>
      <if test="fIpaddress != null">
        F_IPAddress = #{fIpaddress,jdbcType=VARCHAR},
      </if>
      <if test="fIpaddressname != null">
        F_IPAddressName = #{fIpaddressname,jdbcType=VARCHAR},
      </if>
      <if test="fModuleid != null">
        F_ModuleId = #{fModuleid,jdbcType=VARCHAR},
      </if>
      <if test="fModulename != null">
        F_ModuleName = #{fModulename,jdbcType=VARCHAR},
      </if>
      <if test="fResult != null">
        F_Result = #{fResult,jdbcType=BIT},
      </if>
      <if test="fDescription != null">
        F_Description = #{fDescription,jdbcType=VARCHAR},
      </if>
      <if test="fCreatortime != null">
        F_CreatorTime = #{fCreatortime,jdbcType=TIMESTAMP},
      </if>
      <if test="fCreatoruserid != null">
        F_CreatorUserId = #{fCreatoruserid,jdbcType=VARCHAR},
      </if>
    </set>
    where F_Id = #{fId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ykxj.zfine.model.SysLog">
    update sys_log
    set F_Date = #{fDate,jdbcType=TIMESTAMP},
      F_Account = #{fAccount,jdbcType=VARCHAR},
      F_NickName = #{fNickname,jdbcType=VARCHAR},
      F_Type = #{fType,jdbcType=VARCHAR},
      F_IPAddress = #{fIpaddress,jdbcType=VARCHAR},
      F_IPAddressName = #{fIpaddressname,jdbcType=VARCHAR},
      F_ModuleId = #{fModuleid,jdbcType=VARCHAR},
      F_ModuleName = #{fModulename,jdbcType=VARCHAR},
      F_Result = #{fResult,jdbcType=BIT},
      F_Description = #{fDescription,jdbcType=VARCHAR},
      F_CreatorTime = #{fCreatortime,jdbcType=TIMESTAMP},
      F_CreatorUserId = #{fCreatoruserid,jdbcType=VARCHAR}
    where F_Id = #{fId,jdbcType=VARCHAR}
  </update>
</mapper>